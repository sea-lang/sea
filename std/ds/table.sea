let TABLE_MAX_LOAD = 0.75

tem (KT, VT)
rec TableEntry(key: ^KT, val: VT, next: ^TableEntry)

tem (KT, VT)
rec Table(len: i32, cap: i32, entries: ^TableEntry)

fun make_table(): ^Table {
	var T: ^Table = malloc(sizeof(Table))
	^T = new Table(0, 0, nil)
	ret T
}

fun free_table(table: ^Table) {

}

fun print_table(table: ^Table) { }

fun table_find(entries: ^TableEntry, capacity: i32, key: String): ^TableEntry { }

fun table_adjust_cap(table: ^Table, capacity: i32) { }

fun table_set(table: ^Table, key: String, value: VT): bool { }

fun table_get(table: ^Table, key: String, value: ^VT): bool { }

fun table_delete(table: ^Table, key: String): bool { }

fun table_copy_all_from(from: ^Table, to_: ^Table): void { }

fun table_find_string(table: ^Table, chars: ^char, length: i32, hash: u64): String { }
