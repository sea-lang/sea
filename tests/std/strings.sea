use std/str
use std/io

fun main(): int {
	let str = "Hello, World!"

	printf(c"str.own: %b\n", str.own)
	printf(c"str.len: %d\n", str.len)
	printf(c"str.str: %.*s\n", str.len, str.str)

	if str.len != 13 {
		io'panic("`Hello, World!` was not 13 characters")
	}
	if str.own {
		io'panic("`Hello, World!` owns itself")
	}
	if strncmp(str.str, c"Hello, World!", str.len) != 0 {
		io'panic("`Hello, World!` was != to c`Hello, World!`")
	}

	let copied = str'copy_string(str.len, str.str)
	printf(c"copied.own: %b\n", copied.own)
	printf(c"copied.len: %d\n", copied.len)
	printf(c"copied.str: %.*s\n", copied.len, copied.str)
	if not copied.own -> io'panic("Copy does not own itself")
	str'free_string(ref copied)

	let view = str'string_view(5, str.str)
	printf(c"view.own: %b\n", view.own)
	printf(c"view.len: %d\n", view.len)
	printf(c"view.str: %.*s\n", view.len, view.str)
	if view.len != 5 -> io'panic("View length is not equal to 5")
	if view.own -> io'panic("View owns itself")
	if strncmp(view.str, c"Hello", view.len) != 0 {
		io'panic("`Hello` was != to c`Hello`")
	}
}
